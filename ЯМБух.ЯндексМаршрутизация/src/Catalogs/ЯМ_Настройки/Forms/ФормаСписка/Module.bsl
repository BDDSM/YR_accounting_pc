
&НаКлиенте
Процедура СохранитьНастройкиВФайл(Команда)
	ФайлНастроекМодуляНачалоВыбора(ФайлНастроекМодуля,, Ложь, "Сохранение", "*.dni");
	Если Не ЗначениеЗаполнено(ФайлНастроекМодуля) Тогда
		Сообщить("Не выбран файл хранения настроек - сохранение настроек отменено!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	НастройкиОбработки = ПолучитьТекстФайлаНастроек();
	Файл = Новый ЗаписьТекста(ФайлНастроекМодуля);
	Файл.ЗаписатьСтроку(НастройкиОбработки);
	Файл.Закрыть();
	Сообщить("В веб клиенте сохранение настроек не реализовано");
КонецПроцедуры

&НаКлиенте
Процедура ФайлНастроекМодуляНачалоВыбора(ФайлНастроекМодуля, ДанныеВыбора=Неопределено, СтандартнаяОбработка,
	Режим = "Открытие", РасширениеФайла = "*.ini", МножественныйВыбор = Ложь)
	
	Если (Режим = "Открытие") или (Режим = Неопределено) Тогда
		Режим = РежимДиалогаВыбораФайла.Открытие;
	ИначеЕсли Режим = "Сохранение" Тогда
		Режим = РежимДиалогаВыбораФайла.Сохранение;
	КонецЕсли;
	ДиалогВыбора = Новый ДиалогВыбораФайла(Режим);
	Если ЗначениеЗаполнено(ФайлНастроекМодуля) Тогда
		Файл = Новый Файл(ФайлНастроекМодуля);
		ДиалогВыбора.Каталог = Файл.ПолноеИмя;
		ДиалогВыбора.ПолноеИмяФайла = Файл.ПолноеИмя;
	КонецЕсли; 
	ДиалогВыбора.МножественныйВыбор = МножественныйВыбор;
	ДиалогВыбора.Фильтр = "Файл настроек модуля | " + РасширениеФайла;
	ДиалогВыбора.Заголовок = "Выберите файл для хранения настроек";
	Если ДиалогВыбора.Выбрать() Тогда
		Если МножественныйВыбор Тогда
			ФайлНастроекМодуля = ДиалогВыбора.ВыбранныеФайлы;
		Иначе
			ФайлНастроекМодуля = ДиалогВыбора.ПолноеИмяФайла;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстФайлаНастроек()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ЯМ_Настройки.Наименование, """") КАК Наименование,
	|	ЕСТЬNULL(ЯМ_Настройки.Имя, """") КАК Имя,
	|	ЕСТЬNULL(ЯМ_Настройки.Значение, """") КАК Значение,
	|	ЯМ_Настройки.ЭтоГруппа КАК ЭтоГруппа,
	|	ЯМ_Настройки.Родитель КАК Родитель,
	|	ЕСТЬNULL(ЯМ_Настройки.Родитель.Наименование, """") КАК Родитель1,
	|	ЕСТЬNULL(ЯМ_Настройки.Родитель.Родитель.Наименование, """") КАК Родитель2,
	|	ЕСТЬNULL(ЯМ_Настройки.Родитель.Родитель.Родитель.Наименование, """") КАК Родитель3,
	|	ВЫБОР
	|		КОГДА НЕ ЯМ_Настройки.ЭтоГруппа
	|			ТОГДА 4
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЯМ_Настройки.Родитель = ЗНАЧЕНИЕ(Справочник.ЯМ_Настройки.ПустаяСсылка)
	|					ТОГДА 1
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ЯМ_Настройки.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.ЯМ_Настройки.ПустаяСсылка)
	|							ТОГДА 2
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ЯМ_Настройки.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.ЯМ_Настройки.ПустаяСсылка)
	|									ТОГДА 3
	|								ИНАЧЕ 4
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ПриоритетЗагрузки
	|ИЗ
	|	Справочник.ЯМ_Настройки КАК ЯМ_Настройки";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("utf-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Справочник");
	
	Для каждого Строка Из РезультатЗапроса Цикл
	
		ЗаписьXML.ЗаписатьНачалоЭлемента("Элемент");
		ЗаписьXML.ЗаписатьАтрибут("Наименование", 		Строка.Наименование);
		ЗаписьXML.ЗаписатьАтрибут("Имя", 				Строка.Имя);
		ЗаписьXML.ЗаписатьАтрибут("Значение", 			?(Строка.Значение = Неопределено, "", Строка(Строка.Значение)));
		ЗаписьXML.ЗаписатьАтрибут("ТипЗначения", 		Строка(ТипЗнч(Строка.Значение)));
		ЗаписьXML.ЗаписатьАтрибут("ЭтоГруппа", 			Формат(Строка.ЭтоГруппа, "БЛ=Ложь; БИ=Истина"));
		ЗаписьXML.ЗаписатьАтрибут("Родитель", 			Строка.Родитель1);
		ЗаписьXML.ЗаписатьАтрибут("ПриоритетЗагрузки", 	Строка(Строка.ПриоритетЗагрузки));
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
	
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	Возврат ЗаписьXML.Закрыть();	
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьНастройкиИзФайла(Команда)
	
	ФайлНастроекМодуляНачалоВыбора(ФайлНастроекМодуля,,Ложь,"Открытие","*.dni");
	Если Не ЗначениеЗаполнено(ФайлНастроекМодуля) Тогда
		Сообщить("Не выбран файл хранения настроек - загрузка настроек отменена!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	//Попытка
		ЗагрузитьДеревоСобытийИзФайлаНаСервере(ФайлНастроекМодуля);
	//Исключение
	//	Сообщить("Не удалось загрузить настройки.");
	//КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДеревоСобытийИзФайлаНаСервере(ФайлНастроекМодуля)

	ЧтениеXML = Новый ЧтениеXML;
	Фабрика = Новый ФабрикаXDTO;
	ЧтениеXML.ОткрытьФайл(ФайлНастроекМодуля);
	
	КореньДанные = Фабрика.ПрочитатьXML(ЧтениеXML);
	
	ТаблицаНастроек = Новый ТаблицаЗначений;
	ТаблицаНастроек.Колонки.Добавить("Наименование");
	ТаблицаНастроек.Колонки.Добавить("Имя");
	ТаблицаНастроек.Колонки.Добавить("Значение");
	ТаблицаНастроек.Колонки.Добавить("ТипЗначения");
	ТаблицаНастроек.Колонки.Добавить("ЭтоГруппа");
	ТаблицаНастроек.Колонки.Добавить("Родитель");
	ТаблицаНастроек.Колонки.Добавить("ПриоритетЗагрузки");
	ТаблицаНастроек.Колонки.Добавить("СсылкаНаОписание");
	
	ДанныеФайла = КореньДанные.Элемент;
	Для Каждого СтрокаДанных Из ДанныеФайла Цикл 
		НоваяСтрока = ТаблицаНастроек.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных,,"ПриоритетЗагрузки");
		НоваяСтрока.ПриоритетЗагрузки = Число(СтрокаДанных.ПриоритетЗагрузки);
	КонецЦикла;
	ТаблицаНастроек.Сортировать("ПриоритетЗагрузки");
	
	Для Каждого Настройка Из ТаблицаНастроек Цикл 
		
		Наименование = Настройка.Наименование;
		Имя = Настройка.Имя;
		Значение = Настройка.Значение;
		СсылкаНаОписание = Настройка.СсылкаНаОписание;
		Если Настройка.Родитель = "" Тогда 
			Родитель = Справочники.ЯМ_Настройки.ПустаяСсылка();
		Иначе
			Родитель = Справочники.ЯМ_Настройки.НайтиПоНаименованию(Настройка.Родитель);
		КонецЕсли;
		
		НастройкаСуществует = Справочники.ЯМ_Настройки.НайтиПоНаименованию(Настройка.Наименование);
		Если НастройкаСуществует = Справочники.ЯМ_Настройки.ПустаяСсылка() Тогда
			Если Булево(Настройка.ЭтоГруппа) Тогда 
				НоваяНастройка = Справочники.ЯМ_Настройки.СоздатьГруппу();
			Иначе
				НоваяНастройка = Справочники.ЯМ_Настройки.СоздатьЭлемент();
			КонецЕсли;
		Иначе 
			НоваяНастройка = НастройкаСуществует.ПолучитьОбъект();
		КонецЕсли;
		Если НЕ НоваяНастройка.ЭтоГруппа Тогда
			Если Настройка.ТипЗначения = "Булево" Тогда 
				НоваяНастройка.Значение = Булево(Значение);
			ИначеЕсли Настройка.ТипЗначения = "Число" Тогда 
				НоваяНастройка.Значение = Число(Значение);
			Иначе
				НоваяНастройка.Значение = Значение;
			КонецЕсли;
			НоваяНастройка.Имя = Имя;
			НоваяНастройка.СсылкаНаОписание = СсылкаНаОписание;
		КонецЕсли;
		НоваяНастройка.Наименование = Наименование;
		НоваяНастройка.Родитель = Родитель;
		НоваяНастройка.Записать();
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаОписаниеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ПерейтиПоНавигационнойСсылке(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСохраненныеКоординаты(Команда)
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("УдалитьСохраненныеКоординатыНаКлиенте", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, НСтр("Точно удалить все координаты? восстановить их будет нельзя!"), Режим, 0);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСохраненныеКоординатыНаКлиенте(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	УдалитьСохраненныеКоординатыНаСервере();
	ПоказатьПредупреждение(,"Координаты удалены!");
КонецПроцедуры

&НаСервере
Процедура УдалитьСохраненныеКоординатыНаСервере()

	РС = РегистрыСведений.ЯМ_СохраненныеКоординаты.СоздатьНаборЗаписей();
	РС.Записать();

КонецПроцедуры